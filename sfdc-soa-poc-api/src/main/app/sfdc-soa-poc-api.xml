<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sqs="http://www.mulesoft.org/schema/mule/sqs" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:context="http://www.springframework.org/schema/context" xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/1.0/mule-objectstore.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/sqs http://www.mulesoft.org/schema/mule/sqs/1.0/mule-sqs.xsd">
    <https:connector name="HTTP_HTTPS" cookieSpec="netscape" validateConnections="true" sendBufferSize="0" receiveBufferSize="0" receiveBacklog="0" clientSoTimeout="10000" serverSoTimeout="10000" socketSoLinger="0" doc:name="HTTP\HTTPS">
        <https:tls-key-store path="keystore.jks" keyPassword="${keystore.password}" storePassword="${keystore.password}"/>
    </https:connector>
    <sfdc:config name="Salesforce" username="adrian.hsieh+developer@mulesoft.com" password="frensworkz2014" securityToken="ApjE1O8kAKwiro10Wto37j47D"  doc:name="Salesforce">
        <sfdc:connection-pooling-profile initialisationPolicy="INITIALISE_ONE" exhaustedAction="WHEN_EXHAUSTED_GROW"/>
    </sfdc:config>
    <objectstore:config name="ObjectStore" persistent="true" doc:name="ObjectStore"/>
    <context:property-placeholder location="mule.properties,mule.credentials.properties"/>
    <sqs:config name="Amazon_SQS" accessKey="${amazon.sqs.access.key}" secretKey="${amazon.sqs.secret.key}" queueName="frensworkz-poc" region="USEAST1" doc:name="Amazon SQS">
        <sqs:connection-pooling-profile initialisationPolicy="INITIALISE_ONE" exhaustedAction="WHEN_EXHAUSTED_GROW"/>
    </sqs:config>
    <flow name="sfdc-soa-poc-apiFlow1" doc:name="sfdc-soa-poc-apiFlow1">
        <https:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${https.port}" doc:name="HTTPS" connector-ref="HTTP_HTTPS" path="find"/>
        <json:json-to-object-transformer doc:name="JSON to Object"/>
        <set-variable variableName="record-key" value="#[payload.get('key')]" doc:name="key"/>
        <objectstore:contains config-ref="ObjectStore" key="#[flowVars['record-key']]" doc:name="ObjectStore"/>
        <choice doc:name="Choice">
            <when expression="#[payload]">
                <objectstore:retrieve config-ref="ObjectStore" key="#[flowVars['record-key']]" doc:name="ObjectStore"/>
            </when>
            <otherwise>
                <expression-transformer expression="#[[]]" doc:name="Expression"/>
            </otherwise>
        </choice>
        <logger message="Retrieved payload #[payload]" level="INFO" doc:name="Logger"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    <flow name="sfdc-soa-poc-apiFlow3" doc:name="sfdc-soa-poc-apiFlow3">
        <sqs:receive-messages config-ref="Amazon_SQS" visibilityTimeout="5"  doc:name="Amazon SQS"/>
        <logger message="RECEIVED payload from SQS #[payload]" level="INFO" doc:name="Logger"/>
        <json:json-to-object-transformer doc:name="JSON to Object"/>
        <set-variable variableName="object-key" value="#[payload.get('Name')]" doc:name="Variable"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <objectstore:store config-ref="ObjectStore" key="#[flowVars['object-key']]" value-ref="#[payload]" overwrite="true" doc:name="ObjectStore"/>
    </flow>
</mule>
